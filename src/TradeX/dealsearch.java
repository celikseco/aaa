/*
 *  This software is designed for Unit Electric
 *  Contact seckin.celik@unitelektrik.com.tr
 * 
 */

package TradeX;

import static TradeX.ilkekran.tabular;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author seckin.celik
 */
public class dealsearch extends javax.swing.JInternalFrame {

                    String a="";
                Connection conn = null;
		Statement stmt = null;
		ResultSet rs = null;
                PreparedStatement ps=null;
                private String connectionUrl="jdbc:mysql://192.168.0.162:3306/unit";
                private String connectionUser="general_user";
                private String connectionPassword= "Trade2013.";
    public dealsearch() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenu1 = new javax.swing.JMenu();
        contract = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablo = new javax.swing.JTable();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilities/open1616.png"))); // NOI18N
        jMenu1.setText("Open");
        jMenu1.setToolTipText("");

        contract.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        contract.setText("Contract");
        contract.setToolTipText("");
        contract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contractview(evt);
            }
        });
        jMenu1.add(contract);

        jMenuItem2.setText(" B/G");
        jMenuItem2.setToolTipText("");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bgview(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("view CBTC Contract");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText(" Energy Invoice");
        jMenuItem4.setToolTipText("");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText(" LFC");
        jMenuItem5.setToolTipText("");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewlfc(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setText(" CBTC Invoice");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jPopupMenu1.add(jMenu1);

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilities/Money1616.png"))); // NOI18N
        jMenuItem1.setText("Profit");
        jMenuItem1.setToolTipText("");
        jPopupMenu1.add(jMenuItem1);

        setBackground(new java.awt.Color(255, 255, 255));
        setClosable(true);
        setIconifiable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jRadioButton1.setText("All");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jRadioButton2.setText("Last Month");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jRadioButton3.setText("Next Month");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jTextField1.setBackground(new java.awt.Color(255, 255, 204));
        jTextField1.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilities/search2020.png"))); // NOI18N

        tablo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Seller", "Buyer", "Start", "End", "Payment", "B/G Issue", "B/G Validity", "Contract", "B/G"
            }
        ));
        tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabloMouseReleased(evt);
            }
        });
        tablo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabloKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tablo);

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jRadioButton4.setText("This Month");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/utilities/refresh2020.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2)
                        .addGap(24, 24, 24)
                        .addComponent(jRadioButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton3)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jRadioButton1)
                        .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton4)
                        .addComponent(jRadioButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2))
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
                tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabloMouseReleased(evt);
            }
        });
        tablo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabloKeyReleased(evt);
            }
        });
        jRadioButton1.setSelected(true);
        int i=0;

        dbo.dealSave deal=new dbo.dealSave();
        int j=deal.monthvieww();

        ResultSet rss=deal.monthview();
        
        String [] kolonname={"Select","ID","Seller","Buyer","Start","End","Payment","BG Issue","BG Validity","Contract","BG"};
        Object veri[][]=new Object[j][11];
        try {
            while(rss.next()){
                veri[i][1]=rss.getInt("id");
                veri[i][2]=rss.getString("Seller");
                veri[i][3]=rss.getString("Buyer");
                veri[i][4]=rss.getDate("Start_Date");
                veri[i][5]=rss.getDate("End_Date");
                veri[i][6]=rss.getDate("Payment_Date");
                veri[i][7]=rss.getDate("Issue");
                veri[i][8]=rss.getDate("Validity");
                veri[i][9]=rss.getString("ContractName");
                veri[i][10]=rss.getString("Filename");           
                ;         

                i++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(dealsearch.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        tablo.setModel(new DefaultTableModel(veri,kolonname)
                    {
            Class[] types = new Class [] {
                java.lang.Boolean.class,java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        
        jScrollPane1.setViewportView(tablo);
    }//GEN-LAST:event_formInternalFrameOpened

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
         String columnName[]={"Select","ID","Seller","Buyer","Start","End","Payment","BG Issue","BG Validity","Contract","BG"};
        Object oss[][]=new Object[100][11];
        ResultSet rs1=null;
        int li=0; 
        
            try{          
                Class.forName("com.mysql.jdbc.Driver").newInstance();	                 
                java.sql.Connection con=DriverManager.getConnection(connectionUrl, connectionUser, connectionPassword);   
                Statement st = con.createStatement();
                String query = "SELECT * from unit.dbodeal WHERE Seller LIKE '%" + jTextField1.getText() + "%' or Buyer LIKE '%" + jTextField1.getText() + "%';";

                rs1 = st.executeQuery(query);

                
	}catch(ClassNotFoundException | InstantiationException | IllegalAccessException | SQLException e){
                            System.out.println(e.toString());

        }
         
            try {
                    while(rs1.next()){
                      oss[li][1]=rs1.getString("id");
                      oss[li][2]=rs1.getString("Seller");
                      oss[li][3]=rs1.getString("Buyer");
                      oss[li][4]=rs1.getString("Start_Date");
                      oss[li][5]=rs1.getString("End_Date");
                      oss[li][6]=rs1.getString("Payment_Date");
                      oss[li][7]=rs1.getString("Issue");
                      oss[li][8]=rs1.getString("Validity");
                      oss[li][9]=rs1.getString("ContractName");
                      oss[li][10]=rs1.getString("Filename");
                      
                        li++;
        }
                    
 tablo.setModel(new DefaultTableModel(oss,columnName)
                    {
            Class[] types = new Class [] {
                java.lang.Boolean.class,java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });       
            } catch (SQLException ex) {
                    System.out.println(ex.toString());
    }
            finally {
			try { if (rs1 != null) rs1.close(); } catch (SQLException e) {
                            System.out.println(e.toString());
                    }

		}
        
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabloMouseReleased(evt);
            }
        });
        tablo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabloKeyReleased(evt);
            }
        });
        String columnName[]={"Select","ID","Seller","Buyer","Start","End","Payment","BG Issue","BG Validity","Contract","BG"};
        int i=0;
        dbo.dealSave nextmonth=new dbo.dealSave();
        ResultSet mont=nextmonth.monthNext();
                int j=nextmonth.monthvieww();
        Object oss[][]=new Object[j][11];

                    try {
                    while(mont.next()){
                      oss[i][1]=mont.getString("id");
                      oss[i][2]=mont.getString("Seller");
                      oss[i][3]=mont.getString("Buyer");
                      oss[i][4]=mont.getString("Start_Date");
                      oss[i][5]=mont.getString("End_Date");
                      oss[i][6]=mont.getString("Payment_Date");
                      oss[i][7]=mont.getString("Issue");
                      oss[i][8]=mont.getString("Validity");
                      oss[i][9]=mont.getString("ContractName");
                      oss[i][10]=mont.getString("Filename");
                      
                        i++;
        }
                    }catch(SQLException e){}              
                     tablo.setModel(new DefaultTableModel(oss,columnName)
                    {
            Class[] types = new Class [] {
                java.lang.Boolean.class,java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        
        jScrollPane1.setViewportView(tablo);
                    tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabloMouseReleased(evt);
            }
        });
        tablo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabloKeyReleased(evt);
            }
        });
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
                tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabloMouseReleased(evt);
            }
        });
        tablo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabloKeyReleased(evt);
            }
        });
                 String columnName[]={"Select","ID","Seller","Buyer","Start","End","Payment","BG Issue","BG Validity","Contract","BG"};
        int i=0;
        dbo.dealSave nextmonth=new dbo.dealSave();
                int j=nextmonth.monthvieww();

        ResultSet mont=nextmonth.previousmonth();
                Object oss[][]=new Object[j][11];

                    try {
                    while(mont.next()){
                      oss[i][1]=mont.getString("id");
                      oss[i][2]=mont.getString("Seller");
                      oss[i][3]=mont.getString("Buyer");
                      oss[i][4]=mont.getString("Start_Date");
                      oss[i][5]=mont.getString("End_Date");
                      oss[i][6]=mont.getString("Payment_Date");
                      oss[i][7]=mont.getString("Issue");
                      oss[i][8]=mont.getString("Validity");
                      oss[i][9]=mont.getString("ContractName");
                      oss[i][10]=mont.getString("Filename");
                      
                        i++;
        }
                    }catch(Exception e){}              
                     tablo.setModel(new DefaultTableModel(oss,columnName)
                    {
            Class[] types = new Class [] {
                java.lang.Boolean.class,java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        
        jScrollPane1.setViewportView(tablo);
                    
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
                tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabloMouseReleased(evt);
            }
        });
        tablo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabloKeyReleased(evt);
            }
        });
        
         String columnName[]={"Select","ID","Seller","Buyer","Start","End","Payment","BG Issue","BG Validity","Contract","BG"};
        int i=0;
        dbo.dealSave nextmonth=new dbo.dealSave();
        ResultSet mont=nextmonth.currentmonth();
        int j=nextmonth.monthvieww();
        Object oss[][]=new Object[j][11];

        
                    try {
                    while(mont.next()){
                      oss[i][1]=mont.getString("id");
                      oss[i][2]=mont.getString("Seller");
                      oss[i][3]=mont.getString("Buyer");
                      oss[i][4]=mont.getString("Start_Date");
                      oss[i][5]=mont.getString("End_Date");
                      oss[i][6]=mont.getString("Payment_Date");
                      oss[i][7]=mont.getString("Issue");
                      oss[i][8]=mont.getString("Validity");
                      oss[i][9]=mont.getString("ContractName");
                      oss[i][10]=mont.getString("Filename");
                      
                        i++;
        }
                    }catch(SQLException e){}              
                     tablo.setModel(new DefaultTableModel(oss,columnName)
                    {
            Class[] types = new Class [] {
                java.lang.Boolean.class,java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        
        jScrollPane1.setViewportView(tablo);
                    
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
                tablo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tabloMouseReleased(evt);
            }
        });
        tablo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabloKeyReleased(evt);
            }
        });
         
        int i=0;
        dbo.dealSave nextmonth=new dbo.dealSave();
        ResultSet mont=nextmonth.monthview();
        int j=nextmonth.monthvieww();
        String columnName[]={"Select","ID","Seller","Buyer","Start","End","Payment","BG Issue","BG Validity","Contract","BG"};
        Object oss[][]=new Object[j][11];
                    try {
                    while(mont.next()){
                      oss[i][1]=mont.getString("id");
                      oss[i][2]=mont.getString("Seller");
                      oss[i][3]=mont.getString("Buyer");
                      oss[i][4]=mont.getString("Start_Date");
                      oss[i][5]=mont.getString("End_Date");
                      oss[i][6]=mont.getString("Payment_Date");
                      oss[i][7]=mont.getString("Issue");
                      oss[i][8]=mont.getString("Validity");
                      oss[i][9]=mont.getString("ContractName");
                      oss[i][10]=mont.getString("Filename");
                      
                        i++;
        }
                    }catch(SQLException e){}              

                     tablo.setModel(new DefaultTableModel(oss,columnName)
                    {
            Class[] types = new Class [] {
                java.lang.Boolean.class,java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        
        jScrollPane1.setViewportView(tablo);
                    
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void contractview(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contractview
        // TODO add your handling code here:
        
        try{            
        int  i = Integer.parseInt(tablo.getValueAt(tablo.getSelectedRow(), 1).toString());
      
        dbo.dealSave kontrat= new dbo.dealSave();
            ResultSet klm=kontrat.contractview(i);
            
                    try{
                        while(klm.next()){
                            java.sql.Blob myBlob = klm.getBlob("ContractDate");
                            try (java.io.InputStream myInputStream = myBlob.getBinaryStream()) {
                                String yol="C:\\temp\\"+klm.getString("ContractName");
                                FileOutputStream fos = new FileOutputStream(yol);
                                byte[] buffer = new byte[klm.getInt("ContractSize")];
                                int bytesRead = 0;
                                while ((bytesRead = myInputStream.read(buffer)) != -1) {
                                    fos.write(buffer, 0, bytesRead);
                                    fos.close();
                                }
                                if ((new File(yol)).exists()) {
                                    
                                    Process p = Runtime
                                            .getRuntime()
                                            .exec("rundll32 url.dll,FileProtocolHandler "+yol);
                                    p.waitFor();
                                }
                            }   catch (InterruptedException ex) {
                                Logger.getLogger(dealsearch.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                        
                        
                    }catch(IOException | SQLException e){
                        JOptionPane.showConfirmDialog(null, " "+e.getMessage());
                    }

            
        }catch(HeadlessException | NumberFormatException e){
        JOptionPane.showConfirmDialog(null, " "+e.getMessage());
        
}
        
    }//GEN-LAST:event_contractview

    private void tabloKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabloKeyReleased
        // TODO add your handling code here:
 
    }//GEN-LAST:event_tabloKeyReleased

    private void tabloMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabloMouseReleased
        // TODO add your handling code here:
                 if(evt.isPopupTrigger()){
            jPopupMenu1.show(tablo, evt.getX(),evt.getY());}
    }//GEN-LAST:event_tabloMouseReleased

    private void bgview(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bgview
        // TODO add your handling code here:
        try{ 
        int  i =Integer.parseInt((tablo.getValueAt(tablo.getSelectedRow(), 1).toString()));
        dbo.dealSave kontrat= new dbo.dealSave();
            ResultSet klm=kontrat.contractview(i);
            try{
                while(klm.next()){
                    java.sql.Blob myBlob = klm.getBlob("datay"); 
                    try (java.io.InputStream myInputStream = myBlob.getBinaryStream()) {
                        String yol="C:\\temp\\"+klm.getString("FileName");
                        FileOutputStream fos = new FileOutputStream(yol);
                        byte[] buffer = new byte[klm.getInt("Length")];
                        int bytesRead = 0;
                        while ((bytesRead = myInputStream.read(buffer)) != -1) {
                            fos.write(buffer, 0, bytesRead);
                            fos.close();
                        } 
                        if ((new File(yol)).exists()) {
 
			Process p = Runtime
			   .getRuntime()
			   .exec("rundll32 url.dll,FileProtocolHandler "+yol);
			p.waitFor();
                    } 
                }   catch (InterruptedException ex) { 
                        Logger.getLogger(dealsearch.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                }    
               
            
            }catch(IOException | SQLException e){
            JOptionPane.showConfirmDialog(null, " "+e.getMessage());
            }}
            catch(HeadlessException | NumberFormatException e){
            JOptionPane.showConfirmDialog(null, " "+e.getMessage());
            }
        
    }//GEN-LAST:event_bgview

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        try{ 
        int  i =Integer.parseInt(tablo.getValueAt(tablo.getSelectedRow(), 1).toString());
        dbo.dealSave kontrat= new dbo.dealSave();
            ResultSet klm=kontrat.contractview(i);
            try{
                while(klm.next()){
                    java.sql.Blob myBlob = klm.getBlob("CBTCDate"); 
                    try (java.io.InputStream myInputStream = myBlob.getBinaryStream()) {
                        String yol="C:\\temp\\"+klm.getString("CBTCName");
                        FileOutputStream fos = new FileOutputStream(yol);
                        byte[] buffer = new byte[klm.getInt("CBTCSize")];
                        int bytesRead = 0;
                        while ((bytesRead = myInputStream.read(buffer)) != -1) {
                            fos.write(buffer, 0, bytesRead);
                            fos.close();
                        } 
                        if ((new File(yol)).exists()) {
 
			Process p = Runtime
			   .getRuntime()
			   .exec("rundll32 url.dll,FileProtocolHandler "+yol);
			p.waitFor();
                    } 
                }   catch (InterruptedException ex) { 
                        Logger.getLogger(dealsearch.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                }    
               
            
            }catch(IOException | SQLException e){JOptionPane.showConfirmDialog(null, " "+e.getMessage());}
        
        }
            catch(NumberFormatException e){
              JOptionPane.showConfirmDialog(null, " "+e.getMessage());
            }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
         
        try{
            int  i =Integer.parseInt(tablo.getValueAt(tablo.getSelectedRow(), 1).toString());
        
        dbo.dealSave kontrat= new dbo.dealSave();
            ResultSet klm=kontrat.contractview(i);
            try{
                while(klm.next()){
                    java.sql.Blob myBlob = klm.getBlob("InvDate"); 
                    try (java.io.InputStream myInputStream = myBlob.getBinaryStream()) {
                        String yol="C:\\temp\\"+klm.getString("InvName");
                        FileOutputStream fos = new FileOutputStream(yol);
                        byte[] buffer = new byte[klm.getInt("InvSize")];
                        int bytesRead = 0;
                        while ((bytesRead = myInputStream.read(buffer)) != -1) {
                            fos.write(buffer, 0, bytesRead);
                            fos.close();
                        } 
                        if ((new File(yol)).exists()) {
 
			Process p = Runtime
			   .getRuntime()
			   .exec("rundll32 url.dll,FileProtocolHandler "+yol);
			p.waitFor();
                    } 
                }   catch (InterruptedException ex) { 
                        Logger.getLogger(dealsearch.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                }    
               
            
            }catch(IOException | SQLException e){JOptionPane.showConfirmDialog(null, " "+e.getMessage());}
            
        }catch(HeadlessException | NumberFormatException e){JOptionPane.showConfirmDialog(null, " "+e.getMessage());}
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void viewlfc(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewlfc
        // TODO add your handling code here:
        try{ 
        int  i =Integer.parseInt(tablo.getValueAt(tablo.getSelectedRow(), 1).toString());
        dbo.dealSave kontrat= new dbo.dealSave();
            ResultSet klm=kontrat.contractview(i);
            try{
                while(klm.next()){
                    java.sql.Blob myBlob = klm.getBlob("LFCDate"); 
                    try (java.io.InputStream myInputStream = myBlob.getBinaryStream()) {
                        String yol="C:\\temp\\"+klm.getString("LFCName");
                        FileOutputStream fos = new FileOutputStream(yol);
                        byte[] buffer = new byte[klm.getInt("LFCSize")];
                        int bytesRead = 0;
                        while ((bytesRead = myInputStream.read(buffer)) != -1) {
                            fos.write(buffer, 0, bytesRead);
                            fos.close();
                        } 
                        if ((new File(yol)).exists()) {
 
			Process p = Runtime
			   .getRuntime()
			   .exec("rundll32 url.dll,FileProtocolHandler "+yol);
			p.waitFor();
                    } 
                }   catch (InterruptedException ex) { 
            JOptionPane.showConfirmDialog(null, " "+ex.getMessage());                    } 
                }    
               
            
            }catch(IOException | SQLException e){JOptionPane.showConfirmDialog(null, " "+e.getMessage());}
            
        }catch(HeadlessException | NumberFormatException e){JOptionPane.showConfirmDialog(null, " "+e.getMessage());}
    }//GEN-LAST:event_viewlfc

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        try{
        int  i =Integer.parseInt(tablo.getValueAt(tablo.getSelectedRow(), 1).toString());
        dbo.dealSave kontrat= new dbo.dealSave();
            ResultSet klm=kontrat.contractview(i);
            try{
                while(klm.next()){
                    java.sql.Blob myBlob = klm.getBlob("CBTCInvDate"); 
                    try (java.io.InputStream myInputStream = myBlob.getBinaryStream()) {
                        String yol="C:\\temp\\"+klm.getString("CBTCInvName");
                        FileOutputStream fos = new FileOutputStream(yol);
                        byte[] buffer = new byte[klm.getInt("CBTCInvSize")];
                        int bytesRead = 0;
                        while ((bytesRead = myInputStream.read(buffer)) != -1) {
                            fos.write(buffer, 0, bytesRead);
                            fos.close();
                        } 
                        if ((new File(yol)).exists()) {
 
			Process p = Runtime
			   .getRuntime()
			   .exec("rundll32 url.dll,FileProtocolHandler "+yol);
			p.waitFor();
                    } 
                }   catch (InterruptedException ex) { 
                        Logger.getLogger(dealsearch.class.getName()).log(Level.SEVERE, null, ex);
                    } 
                }    
               
            
            }catch(IOException | SQLException e){JOptionPane.showConfirmDialog(null, " "+e.getMessage());}
            
        }catch(HeadlessException | NumberFormatException e){JOptionPane.showConfirmDialog(null, " "+e.getMessage());}
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                int i=0;
        dbo.dealSave deal=new dbo.dealSave();
        ResultSet rss=deal.monthview();
                int j=deal.monthvieww();

        String [] kolonname={"Select","ID","Seller","Buyer","Start","End","Payment","BG Issue","BG Validity","Contract","BG"};
        Object veri[][]=new Object[j][11];
        try {
            while(rss.next()){
                veri[i][1]=rss.getInt("id");
                veri[i][2]=rss.getString("Seller");
                veri[i][3]=rss.getString("Buyer");
                veri[i][4]=rss.getDate("Start_Date");
                veri[i][5]=rss.getDate("End_Date");
                veri[i][6]=rss.getDate("Payment_Date");
                veri[i][7]=rss.getDate("Issue");
                veri[i][8]=rss.getDate("Validity");
                veri[i][9]=rss.getString("ContractName");
                veri[i][10]=rss.getString("Filename");           
            
                i++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(dealsearch.class.getName()).log(Level.SEVERE, null, ex);
        }
        
                           tablo.setModel(new DefaultTableModel(veri,kolonname)
                    {
            Class[] types = new Class [] {
                java.lang.Boolean.class,java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        
        jScrollPane1.setViewportView(tablo);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem contract;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    public javax.swing.JTable tablo;
    // End of variables declaration//GEN-END:variables
}
